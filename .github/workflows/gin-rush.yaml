name: gin-rush
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
jobs:
  test:
    name: Run linters/tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16.6'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: go mod download
      - name: Run tests
        run: go test ./...
      - name: Run linters
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          args: -c ./.golangci.yaml ./...
  push_to_docker_registry:
    name: Build and push images to Docker registry
    runs-on: ubuntu-latest
    needs:
      - test
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Build and push API
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/go-api/Dockerfile
          target: build
          platforms: linux/386,linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_USERNAME }}/gin-rush-go:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push DB
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/mysql/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_USERNAME }}/gin-rush-mysql:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  build:
    name: Docker environment run
    runs-on: ubuntu-latest
    needs:
      - push_to_docker_registry
    env:
      ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
      ROLLBAR_ENV_MODE: production
      DB_ROOT_PASS: ${{ secrets.DB_ROOT_PASS }}
      DB_HOST: db
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: gin-rush
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Docker-Compose
        run: docker-compose up -d