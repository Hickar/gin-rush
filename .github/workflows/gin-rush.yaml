name: gin-rush
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
jobs:
  test:
    name: Run linters/tests
    runs-on: ubuntu-latest
    env:
      CONFIG_TEST: ${{ secrets.CONFIG_TEST }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: go mod download
      - name: Retrieve test configuration file
        run: echo "${{ env.CONFIG_TEST }}" | base64 --decode > ./conf/config.test.json
        shell: bash
      - name: Run tests
        run: go test ./...
      - name: Run linters
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          args: -c ./.golangci.yaml ./...
  push_images:
    name: Build and push images to Docker registry
    runs-on: ubuntu-latest
    needs:
      - test
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker
        run: docker login -u "${{ env.DOCKER_USERNAME }}" -p "${{ env.DOCKER_PASSWORD }}"
      - name: Build and push API
        run: |
          docker build -f ./docker/go-api/Dockerfile -t ${{ env.DOCKER_USERNAME }}/gin-rush-go:latest --target build .
          docker push ${{ env.DOCKER_USERNAME }}/gin-rush-go:latest
      - name: Build and push DB
        run: |
          docker build ./docker/mysql/ -t ${{ env.DOCKER_USERNAME }}/gin-rush-mysql:latest
          docker push ${{ env.DOCKER_USERNAME }}/gin-rush-mysql:latest
      - name: Build and push Redis
        run: |
          docker build ./docker/redis/ -t ${{ env.DOCKER_USERNAME }}/gin-rush-redis:latest
          docker push ${{ env.DOCKER_USERNAME }}/gin-rush-redis:latest
      - name: Build and push RabbitMQ
        run: |
          docker build ./docker/rabbitmq/ -t ${{ env.DOCKER_USERNAME }}/gin-rush-rabbitmq:latest
          docker push ${{ env.DOCKER_USERNAME }}/gin-rush-rabbitmq:latest
      - name: Build and push Mailer worker
        run: |
          docker build ./docker/mailer/ -t ${{ env.DOCKER_USERNAME }}/gin-rush-mailer:latest
          docker push ${{ env.DOCKER_USERNAME }}/gin-rush-mailer:latest
  build:
    name: Docker environment run
    runs-on: ubuntu-latest
    needs:
      - push_images
    env:
      CONFIG_PROD: ${{ secrets.CONFIG_PROD }}
      DB_ROOT_PASS: ${{ secrets.DB_ROOT_PASS }}
      DB_HOST: db
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: gin-rush
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Retrieve production configuration file
        run: echo "${{ env.CONFIG_PROD }}" | base64 --decode > > ./conf/config.prod.json
        shell: bash
      - name: Run Docker-Compose
        run: docker-compose up -d